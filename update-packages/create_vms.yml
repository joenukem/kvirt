- name: Create VMs
  hosts: all
  vars:
    lab_rsa: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGtUW3ismHyuCW4CDdTVOOOq6aySdtYenXFWWx7HJa4VTepkG00aaLId9ocra10hc+MB0GTJMCyabDv3i8NKdi6GDH/aOLVsp/Ewy8DEzZMBlJDCt4v2i4/wU4liw6KgEFkZs+5hnqU8d4QzldyGJ5onr+AGvFOKG68CS0BBl40Z1twf1HhCyx8k6nzD2ovlkxWRFZKPAFrtPCBVvQDkOfVFZF+lwzaSztgAjbFZ4A9jqQyUYx4kOJ5DtRef36ucdUdVQale0+8lICl7/gb142SPpYfhxe88/BJScLPRjvVNeu1TxRmoHtVazqnAoRxQYAn2MoI6AG+w6QuZf8f7aL LabGradingKey"

  tasks:

    - name: Create labkey secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: labkey
            namespace: automate-patch
          type: Opaque
          data:
            key: "{{ lab_rsa | b64encode }}"

    - name: Create RHEL virtual machines
      loop:
        - vm1
        - vm2
      redhat.openshift_virtualization.kubevirt_vm:
        state: present
        name: "{{ item }}"
        namespace: automate-patch
        instancetype:
          name: u1.small
        preference:
          name: rhel.9
        data_volume_templates:
          - metadata:
              name: "{{ item }}-volume"
              namespace: automate-patch
            spec:
              sourceRef:
                kind: DataSource
                name: rhel9
                namespace: openshift-virtualization-os-images
              storage:
                resources: {}
        spec:
          domain:
            devices:
              interfaces:
                - name: default
                  masquerade: {}
                - name: bridge-network
                  bridge: {}
          networks:
            - name: default
              pod: {}
            - name: bridge-network
              multus:
                networkName: default/vm-private-net
          volumes:
            - name: rootdisk
              dataVolume:
                name: "{{ item }}-volume"
            - name: cloudinitdisk
              cloudInitNoCloud:
                userData: |-
                  #cloud-config
                  user: cloud-user
                  password: redhat
                  chpasswd:
                    expire: false
                  runcmd:
                  - [ setsebool, -P, virt_qemu_ga_manage_ssh, on ]
          accessCredentials:
            - sshPublicKey:
                propagationMethod:
                  qemuGuestAgent:
                    users:
                      - cloud-user
                source:
                  secret:
                    secretName: labkey

    - name: Wait for virtual machine IP to be populated
      loop:
        - vm1
        - vm2
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        name: "{{ item }}"
        namespace: automate-patch
      register: vmi
      retries: 60
      delay: 10
      until: (vmi.resources[0].status.interfaces[0]['ipAddress'] | default('')) | length > 0
